{"remainingRequest":"/Users/juan/Desktop/bootvue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/juan/Desktop/bootvue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/juan/Desktop/bootvue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/juan/Desktop/bootvue/src/pages/home.vue?vue&type=template&id=56b687e3&","dependencies":[{"path":"/Users/juan/Desktop/bootvue/src/pages/home.vue","mtime":1597795079870},{"path":"/Users/juan/Desktop/bootvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/juan/Desktop/bootvue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/juan/Desktop/bootvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/juan/Desktop/bootvue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}